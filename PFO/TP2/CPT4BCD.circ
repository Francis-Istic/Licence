<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.22" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="RAM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#FSM" name="10">
    <tool name="FSM Entity">
      <a name="content">state_machine example @[50,50,800,500]{&#13;
	in A[3]   @[50,100,44,15];&#13;
	out X[4]   @[807,140,43,15];&#13;
	codeWidth = 2;&#13;
	reset = S0;&#13;
	&#13;
	state S0["01"]:&#13;
	 	@[297,181,30,30]&#13;
		set X="0001";  @[297,181,30,30]	&#13;
		goto S3  when (A=="000")   @[346,269,68,21]; &#13;
		goto S1  when default   @[432,151,50,21]; &#13;
	state S1["10"]:&#13;
	 	@[470,186,30,30]&#13;
		set X="0010";  @[470,186,30,30]	&#13;
		goto S0  when (A=="000")   @[399,230,68,21]; &#13;
		goto S2  when default   @[533,276,50,21]; &#13;
	state S2["00"]:&#13;
	 	@[471,339,30,30]&#13;
		set X={"00",A[0:1],"1"};  @[471,339,30,30]	&#13;
		goto S1  when (A[2:1]=="11")   @[557,250,90,21]; &#13;
		goto S3  when default   @[392,398,50,21]; &#13;
	state S3["11"]:&#13;
	 	@[287,325,30,30]&#13;
		set X="1000";  @[287,325,30,30]	&#13;
		goto S2  when (A=="000")   @[388,313,68,21]; &#13;
		goto S0  when default   @[248,278,50,21]; &#13;
}&#13;
</a>
      <a name="label" val=""/>
    </tool>
  </lib>
  <main name="CPT4BCD"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="CPT4BCD">
    <a name="circuit" val="CPT4BCD"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(290,520)" to="(350,520)"/>
    <wire from="(380,560)" to="(380,630)"/>
    <wire from="(320,630)" to="(380,630)"/>
    <wire from="(610,550)" to="(610,560)"/>
    <wire from="(540,230)" to="(540,500)"/>
    <wire from="(560,560)" to="(610,560)"/>
    <wire from="(240,470)" to="(240,480)"/>
    <wire from="(490,500)" to="(540,500)"/>
    <wire from="(180,280)" to="(230,280)"/>
    <wire from="(230,360)" to="(280,360)"/>
    <wire from="(540,500)" to="(580,500)"/>
    <wire from="(230,280)" to="(230,300)"/>
    <wire from="(640,550)" to="(640,580)"/>
    <wire from="(330,440)" to="(440,440)"/>
    <wire from="(100,290)" to="(140,290)"/>
    <wire from="(230,360)" to="(230,450)"/>
    <wire from="(280,330)" to="(280,360)"/>
    <wire from="(200,480)" to="(240,480)"/>
    <wire from="(230,300)" to="(270,300)"/>
    <wire from="(300,310)" to="(340,310)"/>
    <wire from="(120,230)" to="(540,230)"/>
    <wire from="(200,450)" to="(230,450)"/>
    <wire from="(490,550)" to="(520,550)"/>
    <wire from="(200,540)" to="(350,540)"/>
    <wire from="(120,230)" to="(120,270)"/>
    <wire from="(330,500)" to="(350,500)"/>
    <wire from="(320,330)" to="(340,330)"/>
    <wire from="(500,570)" to="(520,570)"/>
    <wire from="(640,580)" to="(670,580)"/>
    <wire from="(610,550)" to="(640,550)"/>
    <wire from="(120,270)" to="(140,270)"/>
    <wire from="(350,340)" to="(350,380)"/>
    <wire from="(230,450)" to="(250,450)"/>
    <wire from="(280,460)" to="(290,460)"/>
    <wire from="(640,550)" to="(710,550)"/>
    <wire from="(350,380)" to="(360,380)"/>
    <wire from="(490,500)" to="(490,550)"/>
    <wire from="(240,470)" to="(250,470)"/>
    <wire from="(410,500)" to="(490,500)"/>
    <wire from="(290,460)" to="(290,520)"/>
    <wire from="(200,320)" to="(270,320)"/>
    <wire from="(330,440)" to="(330,500)"/>
    <wire from="(440,320)" to="(440,440)"/>
    <wire from="(370,320)" to="(440,320)"/>
    <comp lib="2" loc="(300,310)" name="Multiplexer">
      <a name="width" val="4"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="2" loc="(370,320)" name="Multiplexer">
      <a name="width" val="4"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="0" loc="(710,550)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="Tick"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="1" loc="(280,460)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="0" loc="(200,480)" name="Pin">
      <a name="label" val="inc"/>
    </comp>
    <comp lib="4" loc="(350,470)" name="Register">
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(670,580)" name="Tunnel">
      <a name="label" val="tick"/>
    </comp>
    <comp lib="0" loc="(500,570)" name="Constant">
      <a name="width" val="4"/>
      <a name="value" val="0x9"/>
      <a name="radix" val="2"/>
    </comp>
    <comp lib="0" loc="(200,450)" name="Pin">
      <a name="label" val="load"/>
    </comp>
    <comp lib="0" loc="(200,320)" name="Pin">
      <a name="width" val="4"/>
      <a name="label" val="D"/>
    </comp>
    <comp lib="3" loc="(180,280)" name="Adder">
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(320,630)" name="Pin">
      <a name="label" val="rst"/>
    </comp>
    <comp lib="0" loc="(320,330)" name="Constant">
      <a name="width" val="4"/>
      <a name="value" val="0x0"/>
    </comp>
    <comp lib="0" loc="(360,380)" name="Tunnel">
      <a name="label" val="tick"/>
    </comp>
    <comp lib="0" loc="(200,540)" name="Pin">
      <a name="label" val="clk"/>
    </comp>
    <comp lib="0" loc="(100,290)" name="Constant">
      <a name="facing" val="south"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(580,500)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
      <a name="label" val="Q"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="3" loc="(560,560)" name="Comparator">
      <a name="width" val="4"/>
      <a name="mode" val="unsigned"/>
    </comp>
  </circuit>
</project>
